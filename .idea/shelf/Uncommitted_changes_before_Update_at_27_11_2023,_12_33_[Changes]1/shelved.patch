Index: MedlemsListe.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MedlemsListe.csv b/MedlemsListe.csv
--- a/MedlemsListe.csv	
+++ b/MedlemsListe.csv	
@@ -1,0 +1,9 @@
+paul
+22-22-2222
+mand
+66666666
+kok ale 67
+999999
+aktiv
+ja
+ja
Index: src/main/java/Userinterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Scanner;\n\n// systemet\npublic class Userinterface {\n    private Controller controller;\n\n    private Scanner keyboard = new Scanner(System.in);\n\n\n    public void menu() {\n        System.out.println(\"\"\"\n                Velkommen til Delfinen-klubbens systemet.\n                Hvilke rolle har du i klubben?\n                1: Træner \n                2: Formand\n                3: Kassere\n                \"\"\");\n        /*System.out.println(\"\"\"\n\n\n\n                Velkommen til Delfinklubbens systemet.\n                Hvad vil du tilgå i systemet?\n                1. Medlemmernes stamoplysninger.\n                2. Registere en ny medlem til deflinklubben.\n                3. Kontingenterne\n                4. \n                5.\n                6. \n                7. Registere den valgte svømmer til en konkurrence\n                8. Svømmeresultaterne (Ny menu så man kan vælge den svømmedisciplin man vil tilgå samt se de top 5.)\n                \"\"\")\n\n         */\n    }\n\n\n    public void start() {\n        menu();\n        while (true) {\n\n\n            switch (keyboard.nextInt()) {\n                case 1:\n                    //trænerMenu();\n                    break;\n                case 2:\n                    formandMenu();\n                    break;\n                case 3:\n                    //kassereMenu();\n                    break;\n\n            }\n        }\n    }\n\n\n    public void formandMenu() {\n        System.out.println(\"1: Vis alle medlemmer\" + \"\\n\" + \"2: registrer medlem\");\n        switch (keyboard.nextInt()) {\n\n            case 1:\n                medlemmerStamoplysninger();\n                break;\n            case 2:\n                registrerMedlem();\n                break;\n            case 3:\n                break;\n            default:\n                System.out.println(\"Ugyldigt valg prøv igen\");\n                break;\n\n        }\n\n    }\n\n\n    public void medlemmerStamoplysninger() {\n\n\n        controller.printMedlemmerStamoplysninger();\n\n\n    }\n\n\n    public void registrerMedlem() {\n        keyboard.nextLine();\n\n        System.out.print(\"Navn: \");\n        String name = keyboard.nextLine();\n\n\n        String dateOfBirth = getValidStringInputFødselsdato(\"Fødselsdato i format (dd-mm-yyyy): \");\n\n        System.out.print(\"Køn: \");\n        String gender = keyboard.nextLine();\n\n        int phonenumber = getValidIntegerInputTelefonnummer(\"Telefonnummer: \");\n\n        System.out.print(\"Adresse: \");\n        String adress = keyboard.nextLine();\n\n        int memberNumber = getValidIntegerInputMedlemsnummer(\"Medlemnummer: \");\n\n        System.out.print(\"Passivt eller aktivt medlemskab: \");\n        String passiveOrActive = keyboard.nextLine();\n\n        System.out.print(\"Motionist: \");\n        String motionist = keyboard.nextLine();\n\n        System.out.print(\"Konkurrence: \");\n        String competitive = keyboard.nextLine();\n\n\n        controller.registrerMedlem(name, dateOfBirth, gender, phonenumber, adress, memberNumber, passiveOrActive, motionist, competitive);\n\n\n    }\n\n    // metode for at sørger for man indtaster fødselsdato rigtigt ind\n    private String getValidStringInputFødselsdato(String prompt) {\n        while (true) {\n            try {\n                System.out.print(prompt);\n                String input = keyboard.nextLine();\n\n                SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-mm-yyyy\");\n\n                dateFormat.parse(input);\n\n                return input;\n            } catch (ParseException e) {\n                System.out.println(\"Ugyldig input. Indtast venligst en fødselsdato i formatet (dd-mm-yyyy).\");\n\n            }\n        }\n    }\n\n    // metode for at sørger for man indtaster telefonnummer rigtigt ind\n    private int getValidIntegerInputTelefonnummer(String prompt) {\n        while (true) {\n            try {\n                System.out.print(prompt);\n                int input = keyboard.nextInt();\n                keyboard.nextLine();\n\n                if (String.valueOf(input).length() == 8)\n                    return input;\n                else {\n                    System.out.println(\"Ugyldig input. Indtast venligst et telefonnummer på 8 cifre.\");\n                }\n            } catch (java.util.InputMismatchException e) {\n                // eksempel på error besked (kan laves om)\n                System.out.println(\"Ugyldig input. Indtast venligst et telefonnummer på 8 cifre.\");\n                keyboard.nextLine();\n            }\n        }\n    }\n\n    private int getValidIntegerInputMedlemsnummer(String prompt) {\n        while (true) {\n            try {\n                System.out.print(prompt);\n                int input = keyboard.nextInt();\n                keyboard.nextLine();\n                if (String.valueOf(input).length() == 6)\n                    return input;\n                else {\n                    System.out.println(\"Ugyldig input. Indtast venligst et medlemsnummer på 6 cifre.\");\n\n                }\n            } catch (java.util.InputMismatchException e) {\n                //vi skal spørger hvor mange cifre medlemsnummer har!!\n                System.out.println(\"Ugyldig input. Indtast venligst et medlemsnummer på 6 cifre.\");\n                keyboard.nextLine();\n            }\n        }\n    }\n\n}\n\n// Søren version af menuen\n/*\npackage org.Menu;\n\nimport java.util.Scanner;\n\npublic class UserInterface {\n    private final Scanner scanner;\n\n    public UserInterface() {\n        scanner = new Scanner(System.in);\n    }\n\n    public void menu() {\n        System.out.println(\"\"\"\n        Velkommen til Delfinen-klubbens systemet.\n        Hvilke rolle har du i klubben?\n        1. formand\n        2. kasseren\n        3. træneren\n        \"\"\");\n\n        while (true) {\n            String input = scanner.nextLine().toLowerCase();\n            processIndtast(input);\n        }\n    }\n\n    public void processIndtast(String input) {\n        String[] words = input.split(\"\\\\s+\");\n        String action = words[0];\n\n        // handle user input and the system logic here.\n        switch (action) {\n            // Menu metode med switch case.\n            case \"1\", \"formand\":\n                handleFormandMenu();\n                break;\n            case \"2\", \"kasseren\":\n                handleKasserenMenu();\n                break;\n            case \"3\", \"træneren\":\n                handleTrænerenMenu();\n                break;\n            default:\n                System.out.println(\"Ukendt handling\");\n                break;\n        }\n    }\n\n    private void handleFormandMenu() {\n        System.out.println(\"\"\"\n                Hvad vil du tilgå i systemet? Indtast det nummer du ønsker at tilgå.\n                    1. Medlemmernes stam-oplysninger.\n                    2. Registrer en ny medlem til Delfinen-klubben.\n                \"\"\");\n        String subAction = scanner.nextLine();\n\n        switch (subAction) {\n            case \"1\":\n                System.out.println(\"Medlemmernes stam-oplysninger vises her\");\n                break;\n            case \"2\":\n                System.out.println(\"Registrer en ny medlem\");\n                // Implementer logikken for at registrere en ny medlem her.\n                break;\n            default:\n                System.out.println(\"Ukendt handling\");\n                break;\n        }\n    }\n\n    private void handleKasserenMenu() {\n        System.out.println(\"\"\"\n                Hvad vil du tilgå i systemet? Indtast det nummer du ønsker at tilgå.\n                    1. Få oversigt for kontingenterne\n                    2. blabla ver. 1\n                    3. blabla ver. 2\n                    4. blabla ver 3.\n                \"\"\");\n        String subAction = scanner.nextLine();\n\n        switch (subAction) {\n            case \"1\":\n                System.out.println(\"Oversigten vises her\");\n                handleKasserenSubMenu();\n                break;\n            case \"2\":\n                System.out.println(\"Blabla 1\");\n                break;\n            case \"3\":\n                System.out.println(\"Blabla 1\");\n                break;\n            case \"4\":\n                System.out.println(\"Blabla 1\");\n                break;\n            default:\n                System.out.println(\"Ukendt handling\");\n                break;\n\n\n        }\n    }\n\n    private void handleKasserenSubMenu() {\n        System.out.println(\"\"\"\n        Hvad vil du gøre i kontingentoversigten? Indtast det nummer du ønsker at udføre.\n                1. handling 1\n                2. handling 2.\n        \"\"\");\n        String subSubAction = scanner.nextLine();\n\n        switch (subSubAction) {\n            case \"1\":\n                System.out.println(\"Udfør handling 1 i kontingentoversigten\");\n                // implementer logikken for handling 1 her\n                break;\n            case \"2\":\n                System.out.println(\"Udfør handling 2 i kontingentoversigten\");\n                // implementer logikken for handling 2 her\n                break;\n            default:\n                System.out.println(\"Ukendt handling\");\n                break;\n        }\n    }\n\n    private void handleTrænerenMenu() {\n        System.out.println(\"\"\"\n                 Hvad vil du tilgå i systemet? Indtast den nummer du ønske at tilgå.\n                     1. Få vist svømmeresultaterne (Ny menu så man kan vælge den svømmedisciplin man vil tilgå samt se de top 5.)\n                     2. Registrer den valgte svømmer til en konkurrence\n                 \"\"\");\n        String subAction = scanner.nextLine(); // Antag, at scanner er din inputscanner.\n\n        switch (subAction) {\n            case \"1\":\n                System.out.println(\"Medlemmernes svømmeresultaterne vises her\");\n                break;\n            case \"2\":\n                System.out.println(\"Registrer den valgt svømmer til en konkurrence\");\n                // Implementer logikken for at registrere en ny medlem her.\n                break;\n            default:\n                System.out.println(\"Ukendt handling\");\n                break;\n        }\n    }\n}\n */\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Userinterface.java b/src/main/java/Userinterface.java
--- a/src/main/java/Userinterface.java	
+++ b/src/main/java/Userinterface.java	
@@ -6,7 +6,7 @@
 
 // systemet
 public class Userinterface {
-    private Controller controller;
+    private Controller controller= new Controller();
 
     private Scanner keyboard = new Scanner(System.in);
 
Index: src/main/java/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\npublic class Controller {\n\n    Database database = new Database();\n\n\n    public void printMedlemmerStamoplysninger(){\n        database.printMedlemmerStamoplysninger();\n    }\n\n    public void registrerMedlem(String name, String dateOfBirth, String gender, int phonenumber, String adress, int memberNumber, String passiveOrActive, String motionist, String competitive){\n        database.registrerMedlem(name, dateOfBirth,  gender,  phonenumber,  adress,  memberNumber,  passiveOrActive,  motionist,  competitive);\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Controller.java b/src/main/java/Controller.java
--- a/src/main/java/Controller.java	
+++ b/src/main/java/Controller.java	
@@ -1,7 +1,7 @@
 //
 public class Controller {
 
-    Database database = new Database();
+     Database database = new Database();
 
 
     public void printMedlemmerStamoplysninger(){
